{"ast":null,"code":"/** Text hyphenation in Javascript.\n *  Copyright (C) 2023 Yevhen Tiurin (yevhentiurin@gmail.com)\n *  https://github.com/ytiurin/hyphen\n *\n *  Released under the ISC license\n *  https://github.com/ytiurin/hyphen/blob/master/LICENSE\n */\n(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.createHyphenator = factory();\n  }\n})(this, function () {\n  function createTextReader(setup) {\n    var char1 = \"\";\n    var char2 = \"\";\n    var i = 0;\n    var verifier = setup();\n    return function (text) {\n      while (i < text.length) {\n        char1 = text.charAt(i++);\n        char2 = text.charAt(i);\n        var verified = verifier(char1, char2);\n        if (verified !== void 0) {\n          return verified;\n        }\n      }\n    };\n  }\n  var isNotLetter = RegExp.prototype.test.bind(/\\s|(?![\\'])[\\!-\\@\\[-\\`\\{-\\~\\u2013-\\u203C]/);\n  function createHyphenationVerifier(hyphenChar, skipHTML, minWordLength) {\n    return function () {\n      var accum0 = \"\";\n      var accum = \"\";\n      var isHTMLTag = false;\n      var skipCurrent = false;\n      function resolveWith(value) {\n        accum0 = \"\";\n        accum = \"\";\n        isHTMLTag = false;\n        skipCurrent = false;\n        return value;\n      }\n      return function (char1, char2) {\n        accum += char1;\n        if (isHTMLTag) {\n          if (char1 === \">\") {\n            accum0 += accum;\n            accum = \"\";\n            isHTMLTag = false;\n          }\n        } else {\n          if (char1 === hyphenChar) {\n            skipCurrent = true;\n          }\n          if (char1 === \"<\" && (!isNotLetter(char2) || char2 === \"/\") && skipHTML) {\n            isHTMLTag = true;\n          }\n          if (isNotLetter(char1) && !isNotLetter(char2)) {\n            accum0 += accum;\n            accum = \"\";\n          }\n          if (!isNotLetter(char1) && isNotLetter(char2)) {\n            if (accum.length >= minWordLength && !skipCurrent) {\n              return resolveWith([accum0, accum]);\n            } else {\n              accum0 += accum;\n              accum = \"\";\n            }\n          }\n        }\n        if (char2 === \"\") {\n          if (accum.length < minWordLength || skipCurrent) {\n            accum0 += accum;\n            accum = \"\";\n          }\n          return resolveWith([accum0, accum]);\n        }\n      };\n    };\n  }\n  function createCharIterator(str) {\n    var i = 0;\n    function nextChar() {\n      return str[i++];\n    }\n    function isLastLetter() {\n      return str.length === i + 1;\n    }\n    return [nextChar, isLastLetter];\n  }\n  function createStringSlicer(str) {\n    var i = 0,\n      slice = str;\n    function next() {\n      slice = str.slice(i++);\n      if (slice.length < 3) {\n        return;\n      }\n      return slice;\n    }\n    function isFirstCharacter() {\n      return i === 2;\n    }\n    return [next, isFirstCharacter];\n  }\n  function hyphenateWord(text, patternTree, debug, hyphenChar) {\n    var levels = new Array(text.length + 1),\n      loweredText = (\".\" + text.toLocaleLowerCase() + \".\").split(\"\"),\n      wordSlice,\n      letter,\n      treePtr,\n      nextPtr,\n      patternLevels,\n      patternEntityIndex = -1,\n      slicer,\n      nextSlice,\n      isFirstCharacter,\n      charIterator,\n      nextLetter,\n      isLastLetter;\n    for (var i = levels.length; i--;) levels[i] = 0;\n    slicer = createStringSlicer(loweredText);\n    nextSlice = slicer[0];\n    isFirstCharacter = slicer[1];\n    while (wordSlice = nextSlice()) {\n      patternEntityIndex++;\n      if (isFirstCharacter()) {\n        patternEntityIndex--;\n      }\n      treePtr = patternTree;\n      charIterator = createCharIterator(wordSlice);\n      nextLetter = charIterator[0];\n      isLastLetter = charIterator[1];\n      while (letter = nextLetter()) {\n        if (treePtr[letter] === void 0) {\n          break;\n        }\n        nextPtr = treePtr[letter];\n        treePtr = nextPtr[0];\n        patternLevels = nextPtr[1];\n        if (isLastLetter()) {\n          continue;\n        }\n        if (patternLevels === void 0) {\n          continue;\n        }\n        for (var k = 0; k < patternLevels.length; k++) levels[patternEntityIndex + k] = Math.max(patternLevels[k], levels[patternEntityIndex + k]);\n      }\n    }\n    levels[0] = levels[1] = levels[levels.length - 1] = levels[levels.length - 2] = 0;\n    var hyphenatedText = \"\";\n    for (var i = 0; i < levels.length; i++) {\n      hyphenatedText += (levels[i] % 2 === 1 ? hyphenChar : \"\") + text.charAt(i);\n    }\n    return hyphenatedText;\n  }\n  function start(text, patterns, cache, debug, hyphenChar, skipHTML, minWordLength, isAsync) {\n    function done() {\n      resolveNewText(newText);\n    }\n    var newText = \"\",\n      fragments,\n      readText = createTextReader(createHyphenationVerifier(hyphenChar, skipHTML, minWordLength)),\n      resolveNewText = function () {};\n    function nextTick() {\n      var loopStart = /* @__PURE__ */new Date();\n      while ((!isAsync || /* @__PURE__ */new Date() - loopStart < 10) && (fragments = readText(text))) {\n        if (fragments[1]) {\n          var cacheKey = fragments[1].length ? \"~\" + fragments[1] : \"\";\n          if (cache[cacheKey] === void 0) {\n            cache[cacheKey] = hyphenateWord(fragments[1], patterns, debug, hyphenChar);\n          }\n          fragments[1] = cache[cacheKey];\n        }\n        newText += fragments[0] + fragments[1];\n      }\n      if (!fragments) {\n        done();\n      } else {\n        setTimeout(nextTick);\n      }\n    }\n    if (isAsync) {\n      setTimeout(nextTick);\n      return new Promise(function (resolve) {\n        resolveNewText = resolve;\n      });\n    } else {\n      nextTick();\n      return newText;\n    }\n  }\n  var SETTING_DEFAULT_ASYNC = false;\n  var SETTING_DEFAULT_DEBUG = false;\n  var SETTING_DEFAULT_EXCEPTIONS = [];\n  var SETTING_DEFAULT_HTML = false;\n  var SETTING_DEFAULT_HYPH_CHAR = \"\\xAD\";\n  var SETTING_DEFAULT_MIN_WORD_LENGTH = 5;\n  var SETTING_NAME_ASYNC = \"async\";\n  var SETTING_NAME_DEBUG = \"debug\";\n  var SETTING_NAME_EXCEPTIONS = \"exceptions\";\n  var SETTING_NAME_HTML = \"html\";\n  var SETTING_NAME_HYPH_CHAR = \"hyphenChar\";\n  var SETTING_NAME_MIN_WORD_LENGTH = \"minWordLength\";\n  var _global = typeof global === \"object\" ? global : typeof window === \"object\" ? window : typeof self === \"object\" ? self : false ? void 0 : {};\n  function extend(target, source) {\n    target = target || {};\n    for (var key in source) {\n      target[key] = source[key];\n    }\n    return target;\n  }\n  function validateArray(value) {\n    return value instanceof Array;\n  }\n  function keyOrDefault(object, key, defaultValue, test) {\n    if (key in object && (test ? test(object[key]) : true)) {\n      return object[key];\n    }\n    return defaultValue;\n  }\n  function exceptionsFromDefinition(excetionsList, hyphenChar) {\n    return excetionsList.reduce(function (exceptions, exception) {\n      exceptions[\"~\" + exception.replace(/\\-/g, \"\")] = exception.replace(/\\-/g, hyphenChar);\n      return exceptions;\n    }, {});\n  }\n  function createHyphenator(patternsDefinition, options) {\n    options = options || {};\n    var asyncMode = keyOrDefault(options, SETTING_NAME_ASYNC, SETTING_DEFAULT_ASYNC),\n      caches = {},\n      debug = keyOrDefault(options, SETTING_NAME_DEBUG, SETTING_DEFAULT_DEBUG),\n      exceptions = {},\n      hyphenChar = keyOrDefault(options, SETTING_NAME_HYPH_CHAR, SETTING_DEFAULT_HYPH_CHAR),\n      patterns = JSON.parse(patternsDefinition[0]),\n      minWordLength = keyOrDefault(options, SETTING_NAME_MIN_WORD_LENGTH, SETTING_DEFAULT_MIN_WORD_LENGTH) >> 0,\n      skipHTML = keyOrDefault(options, SETTING_NAME_HTML, SETTING_DEFAULT_HTML),\n      userExceptions = keyOrDefault(options, SETTING_NAME_EXCEPTIONS, SETTING_DEFAULT_EXCEPTIONS, validateArray);\n    var cacheKey = hyphenChar + minWordLength;\n    exceptions[cacheKey] = {};\n    if (patternsDefinition[1]) {\n      exceptions[cacheKey] = exceptionsFromDefinition(patternsDefinition[1], hyphenChar);\n    }\n    if (userExceptions && userExceptions.length) {\n      exceptions[cacheKey] = extend(exceptions[cacheKey], exceptionsFromDefinition(userExceptions, hyphenChar));\n    }\n    caches[cacheKey] = extend({}, exceptions[cacheKey]);\n    if (asyncMode && !(\"Promise\" in _global)) {\n      throw new Error(\"Failed to create hyphenator: Could not find global Promise object, needed for hyphenator to work in async mode\");\n    }\n    return function (text, options2) {\n      options2 = options2 || {};\n      var localDebug = keyOrDefault(options2, SETTING_NAME_DEBUG, debug),\n        localHyphenChar = keyOrDefault(options2, SETTING_NAME_HYPH_CHAR, hyphenChar),\n        localMinWordLength = keyOrDefault(options2, SETTING_NAME_MIN_WORD_LENGTH, minWordLength) >> 0,\n        localUserExceptions = keyOrDefault(options2, SETTING_NAME_EXCEPTIONS, SETTING_DEFAULT_EXCEPTIONS, validateArray),\n        cacheKey2 = localHyphenChar + localMinWordLength;\n      if (!exceptions[cacheKey2] && patternsDefinition[1]) {\n        exceptions[cacheKey2] = exceptionsFromDefinition(patternsDefinition[1], localHyphenChar);\n        caches[cacheKey2] = extend(caches[cacheKey2], exceptions[cacheKey2]);\n      }\n      if (localUserExceptions && localUserExceptions.length) {\n        exceptions[cacheKey2] = extend(exceptions[cacheKey2], exceptionsFromDefinition(localUserExceptions, localHyphenChar));\n        caches[cacheKey2] = extend(caches[cacheKey2], exceptions[cacheKey2]);\n      }\n      return start(text, patterns, caches[cacheKey2], localDebug, localHyphenChar, skipHTML, localMinWordLength, asyncMode);\n    };\n  }\n  return createHyphenator;\n});","map":{"version":3,"names":["root","factory","define","amd","module","exports","createHyphenator","createTextReader","setup","char1","char2","i","verifier","text","length","charAt","verified","isNotLetter","RegExp","prototype","test","bind","createHyphenationVerifier","hyphenChar","skipHTML","minWordLength","accum0","accum","isHTMLTag","skipCurrent","resolveWith","value","createCharIterator","str","nextChar","isLastLetter","createStringSlicer","slice","next","isFirstCharacter","hyphenateWord","patternTree","debug","levels","Array","loweredText","toLocaleLowerCase","split","wordSlice","letter","treePtr","nextPtr","patternLevels","patternEntityIndex","slicer","nextSlice","charIterator","nextLetter","k","Math","max","hyphenatedText","start","patterns","cache","isAsync","done","resolveNewText","newText","fragments","readText","nextTick","loopStart","Date","cacheKey","setTimeout","Promise","resolve","SETTING_DEFAULT_ASYNC","SETTING_DEFAULT_DEBUG","SETTING_DEFAULT_EXCEPTIONS","SETTING_DEFAULT_HTML","SETTING_DEFAULT_HYPH_CHAR","SETTING_DEFAULT_MIN_WORD_LENGTH","SETTING_NAME_ASYNC","SETTING_NAME_DEBUG","SETTING_NAME_EXCEPTIONS","SETTING_NAME_HTML","SETTING_NAME_HYPH_CHAR","SETTING_NAME_MIN_WORD_LENGTH","_global","global","window","self","extend","target","source","key","validateArray","keyOrDefault","object","defaultValue","exceptionsFromDefinition","excetionsList","reduce","exceptions","exception","replace","patternsDefinition","options","asyncMode","caches","JSON","parse","userExceptions","Error","options2","localDebug","localHyphenChar","localMinWordLength","localUserExceptions","cacheKey2"],"sources":["C:/Users/shank/OneDrive/Desktop/E-bookstore/frontend/node_modules/hyphen/hyphen.js"],"sourcesContent":["/** Text hyphenation in Javascript.\n *  Copyright (C) 2023 Yevhen Tiurin (yevhentiurin@gmail.com)\n *  https://github.com/ytiurin/hyphen\n *\n *  Released under the ISC license\n *  https://github.com/ytiurin/hyphen/blob/master/LICENSE\n */\n(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.createHyphenator = factory();\n  }\n})(this, function () {\n  function createTextReader(setup) {\n    var char1 = \"\";\n    var char2 = \"\";\n    var i = 0;\n    var verifier = setup();\n    return function (text) {\n      while (i < text.length) {\n        char1 = text.charAt(i++);\n        char2 = text.charAt(i);\n        var verified = verifier(char1, char2);\n        if (verified !== void 0) {\n          return verified;\n        }\n      }\n    };\n  }\n\n  var isNotLetter = RegExp.prototype.test.bind(\n    /\\s|(?![\\'])[\\!-\\@\\[-\\`\\{-\\~\\u2013-\\u203C]/\n  );\n  function createHyphenationVerifier(hyphenChar, skipHTML, minWordLength) {\n    return function () {\n      var accum0 = \"\";\n      var accum = \"\";\n      var isHTMLTag = false;\n      var skipCurrent = false;\n      function resolveWith(value) {\n        accum0 = \"\";\n        accum = \"\";\n        isHTMLTag = false;\n        skipCurrent = false;\n        return value;\n      }\n      return function (char1, char2) {\n        accum += char1;\n        if (isHTMLTag) {\n          if (char1 === \">\") {\n            accum0 += accum;\n            accum = \"\";\n            isHTMLTag = false;\n          }\n        } else {\n          if (char1 === hyphenChar) {\n            skipCurrent = true;\n          }\n          if (\n            char1 === \"<\" &&\n            (!isNotLetter(char2) || char2 === \"/\") &&\n            skipHTML\n          ) {\n            isHTMLTag = true;\n          }\n          if (isNotLetter(char1) && !isNotLetter(char2)) {\n            accum0 += accum;\n            accum = \"\";\n          }\n          if (!isNotLetter(char1) && isNotLetter(char2)) {\n            if (accum.length >= minWordLength && !skipCurrent) {\n              return resolveWith([accum0, accum]);\n            } else {\n              accum0 += accum;\n              accum = \"\";\n            }\n          }\n        }\n        if (char2 === \"\") {\n          if (accum.length < minWordLength || skipCurrent) {\n            accum0 += accum;\n            accum = \"\";\n          }\n          return resolveWith([accum0, accum]);\n        }\n      };\n    };\n  }\n\n  function createCharIterator(str) {\n    var i = 0;\n    function nextChar() {\n      return str[i++];\n    }\n    function isLastLetter() {\n      return str.length === i + 1;\n    }\n    return [nextChar, isLastLetter];\n  }\n  function createStringSlicer(str) {\n    var i = 0,\n      slice = str;\n    function next() {\n      slice = str.slice(i++);\n      if (slice.length < 3) {\n        return;\n      }\n      return slice;\n    }\n    function isFirstCharacter() {\n      return i === 2;\n    }\n    return [next, isFirstCharacter];\n  }\n  function hyphenateWord(text, patternTree, debug, hyphenChar) {\n    var levels = new Array(text.length + 1),\n      loweredText = (\".\" + text.toLocaleLowerCase() + \".\").split(\"\"),\n      wordSlice,\n      letter,\n      treePtr,\n      nextPtr,\n      patternLevels,\n      patternEntityIndex = -1,\n      slicer,\n      nextSlice,\n      isFirstCharacter,\n      charIterator,\n      nextLetter,\n      isLastLetter;\n    for (var i = levels.length; i--; ) levels[i] = 0;\n    slicer = createStringSlicer(loweredText);\n    nextSlice = slicer[0];\n    isFirstCharacter = slicer[1];\n    while ((wordSlice = nextSlice())) {\n      patternEntityIndex++;\n      if (isFirstCharacter()) {\n        patternEntityIndex--;\n      }\n      treePtr = patternTree;\n      charIterator = createCharIterator(wordSlice);\n      nextLetter = charIterator[0];\n      isLastLetter = charIterator[1];\n      while ((letter = nextLetter())) {\n        if (treePtr[letter] === void 0) {\n          break;\n        }\n        nextPtr = treePtr[letter];\n        treePtr = nextPtr[0];\n        patternLevels = nextPtr[1];\n        if (isLastLetter()) {\n          continue;\n        }\n        if (patternLevels === void 0) {\n          continue;\n        }\n        for (var k = 0; k < patternLevels.length; k++)\n          levels[patternEntityIndex + k] = Math.max(\n            patternLevels[k],\n            levels[patternEntityIndex + k]\n          );\n      }\n    }\n    levels[0] = levels[1] = levels[levels.length - 1] = levels[\n      levels.length - 2\n    ] = 0;\n    var hyphenatedText = \"\";\n    for (var i = 0; i < levels.length; i++) {\n      hyphenatedText +=\n        (levels[i] % 2 === 1 ? hyphenChar : \"\") + text.charAt(i);\n    }\n    return hyphenatedText;\n  }\n\n  function start(\n    text,\n    patterns,\n    cache,\n    debug,\n    hyphenChar,\n    skipHTML,\n    minWordLength,\n    isAsync\n  ) {\n    function done() {\n      resolveNewText(newText);\n    }\n    var newText = \"\",\n      fragments,\n      readText = createTextReader(\n        createHyphenationVerifier(hyphenChar, skipHTML, minWordLength)\n      ),\n      resolveNewText = function () {};\n    function nextTick() {\n      var loopStart = /* @__PURE__ */ new Date();\n      while (\n        (!isAsync || /* @__PURE__ */ new Date() - loopStart < 10) &&\n        (fragments = readText(text))\n      ) {\n        if (fragments[1]) {\n          var cacheKey = fragments[1].length ? \"~\" + fragments[1] : \"\";\n          if (cache[cacheKey] === void 0) {\n            cache[cacheKey] = hyphenateWord(\n              fragments[1],\n              patterns,\n              debug,\n              hyphenChar\n            );\n          }\n          fragments[1] = cache[cacheKey];\n        }\n        newText += fragments[0] + fragments[1];\n      }\n      if (!fragments) {\n        done();\n      } else {\n        setTimeout(nextTick);\n      }\n    }\n    if (isAsync) {\n      setTimeout(nextTick);\n      return new Promise(function (resolve) {\n        resolveNewText = resolve;\n      });\n    } else {\n      nextTick();\n      return newText;\n    }\n  }\n\n  var SETTING_DEFAULT_ASYNC = false;\n  var SETTING_DEFAULT_DEBUG = false;\n  var SETTING_DEFAULT_EXCEPTIONS = [];\n  var SETTING_DEFAULT_HTML = false;\n  var SETTING_DEFAULT_HYPH_CHAR = \"\\xAD\";\n  var SETTING_DEFAULT_MIN_WORD_LENGTH = 5;\n  var SETTING_NAME_ASYNC = \"async\";\n  var SETTING_NAME_DEBUG = \"debug\";\n  var SETTING_NAME_EXCEPTIONS = \"exceptions\";\n  var SETTING_NAME_HTML = \"html\";\n  var SETTING_NAME_HYPH_CHAR = \"hyphenChar\";\n  var SETTING_NAME_MIN_WORD_LENGTH = \"minWordLength\";\n  var _global =\n    typeof global === \"object\"\n      ? global\n      : typeof window === \"object\"\n      ? window\n      : typeof self === \"object\"\n      ? self\n      : false\n      ? void 0\n      : {};\n  function extend(target, source) {\n    target = target || {};\n    for (var key in source) {\n      target[key] = source[key];\n    }\n    return target;\n  }\n  function validateArray(value) {\n    return value instanceof Array;\n  }\n  function keyOrDefault(object, key, defaultValue, test) {\n    if (key in object && (test ? test(object[key]) : true)) {\n      return object[key];\n    }\n    return defaultValue;\n  }\n  function exceptionsFromDefinition(excetionsList, hyphenChar) {\n    return excetionsList.reduce(function (exceptions, exception) {\n      exceptions[\"~\" + exception.replace(/\\-/g, \"\")] = exception.replace(\n        /\\-/g,\n        hyphenChar\n      );\n      return exceptions;\n    }, {});\n  }\n  function createHyphenator(patternsDefinition, options) {\n    options = options || {};\n    var asyncMode = keyOrDefault(\n        options,\n        SETTING_NAME_ASYNC,\n        SETTING_DEFAULT_ASYNC\n      ),\n      caches = {},\n      debug = keyOrDefault(options, SETTING_NAME_DEBUG, SETTING_DEFAULT_DEBUG),\n      exceptions = {},\n      hyphenChar = keyOrDefault(\n        options,\n        SETTING_NAME_HYPH_CHAR,\n        SETTING_DEFAULT_HYPH_CHAR\n      ),\n      patterns = JSON.parse(patternsDefinition[0]),\n      minWordLength =\n        keyOrDefault(\n          options,\n          SETTING_NAME_MIN_WORD_LENGTH,\n          SETTING_DEFAULT_MIN_WORD_LENGTH\n        ) >> 0,\n      skipHTML = keyOrDefault(options, SETTING_NAME_HTML, SETTING_DEFAULT_HTML),\n      userExceptions = keyOrDefault(\n        options,\n        SETTING_NAME_EXCEPTIONS,\n        SETTING_DEFAULT_EXCEPTIONS,\n        validateArray\n      );\n    var cacheKey = hyphenChar + minWordLength;\n    exceptions[cacheKey] = {};\n    if (patternsDefinition[1]) {\n      exceptions[cacheKey] = exceptionsFromDefinition(\n        patternsDefinition[1],\n        hyphenChar\n      );\n    }\n    if (userExceptions && userExceptions.length) {\n      exceptions[cacheKey] = extend(\n        exceptions[cacheKey],\n        exceptionsFromDefinition(userExceptions, hyphenChar)\n      );\n    }\n    caches[cacheKey] = extend({}, exceptions[cacheKey]);\n    if (asyncMode && !(\"Promise\" in _global)) {\n      throw new Error(\n        \"Failed to create hyphenator: Could not find global Promise object, needed for hyphenator to work in async mode\"\n      );\n    }\n    return function (text, options2) {\n      options2 = options2 || {};\n      var localDebug = keyOrDefault(options2, SETTING_NAME_DEBUG, debug),\n        localHyphenChar = keyOrDefault(\n          options2,\n          SETTING_NAME_HYPH_CHAR,\n          hyphenChar\n        ),\n        localMinWordLength =\n          keyOrDefault(options2, SETTING_NAME_MIN_WORD_LENGTH, minWordLength) >>\n          0,\n        localUserExceptions = keyOrDefault(\n          options2,\n          SETTING_NAME_EXCEPTIONS,\n          SETTING_DEFAULT_EXCEPTIONS,\n          validateArray\n        ),\n        cacheKey2 = localHyphenChar + localMinWordLength;\n      if (!exceptions[cacheKey2] && patternsDefinition[1]) {\n        exceptions[cacheKey2] = exceptionsFromDefinition(\n          patternsDefinition[1],\n          localHyphenChar\n        );\n        caches[cacheKey2] = extend(caches[cacheKey2], exceptions[cacheKey2]);\n      }\n      if (localUserExceptions && localUserExceptions.length) {\n        exceptions[cacheKey2] = extend(\n          exceptions[cacheKey2],\n          exceptionsFromDefinition(localUserExceptions, localHyphenChar)\n        );\n        caches[cacheKey2] = extend(caches[cacheKey2], exceptions[cacheKey2]);\n      }\n      return start(\n        text,\n        patterns,\n        caches[cacheKey2],\n        localDebug,\n        localHyphenChar,\n        skipHTML,\n        localMinWordLength,\n        asyncMode\n      );\n    };\n  }\n\n  return createHyphenator;\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}