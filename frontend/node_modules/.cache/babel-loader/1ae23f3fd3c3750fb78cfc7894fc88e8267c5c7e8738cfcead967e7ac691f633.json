{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shank\\\\OneDrive\\\\Desktop\\\\E-bookstore\\\\frontend\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\nimport \"../../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setIsLoggedIn\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const navigate = useNavigate();\n  const [error, setError] = useState(null);\n  const [showPassword, setShowPassword] = useState(false);\n  const [isPasswordEmpty, setIsPasswordEmpty] = useState(true);\n  const [isAdminLogin, setIsAdminLogin] = useState(false); // State to track admin login mode\n\n  useEffect(() => {\n    const isLoggedIn = localStorage.getItem(\"isLoggedIn\");\n    if (isLoggedIn === \"true\") {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n  const handleInputChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    if (e.target.name === \"password\") {\n      setIsPasswordEmpty(e.target.value === \"\");\n    }\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      let loginEndpoint = \"http://localhost:8000/users/login\"; // Endpoint for user login by default\n      let redirectPath = \"/\"; // Default redirect path\n\n      if (isAdminLogin) {\n        loginEndpoint = \"http://localhost:8000/admin/login\"; // Change endpoint for admin login if isAdminLogin is true\n        redirectPath = \"/dashboard\"; // Redirect admin to the dashboard\n      }\n\n      const response = await fetch(loginEndpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (response.status === 200) {\n        localStorage.setItem(\"isLoggedIn\", \"true\");\n        localStorage.setItem(\"firstName\", data.user.firstname);\n        setIsLoggedIn(true);\n\n        // Redirect to the appropriate page based on the user's role\n        navigate(redirectPath);\n      } else {\n        setFormData({\n          email: \"\",\n          password: \"\"\n        });\n\n        // Handle login error messages\n        if (data && data.type === \"email\") {\n          setError(\"Email not found. Please check your email.\");\n        } else if (data && data.type === \"password\") {\n          setError(\"Incorrect password. Please try again.\");\n        } else {\n          setError(\"Invalid credentials. Please try again.\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setError(\"An error occurred. Please try again.\");\n    }\n  };\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  const handleAdminLoginToggle = () => {\n    setIsAdminLogin(!isAdminLogin); // Toggle admin login mode\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isAdminLogin ? \"Admin Login\" : \"User Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? \"text\" : \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleInputChange,\n          required: true,\n          className: \"password-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), !isPasswordEmpty && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"toggle-password\",\n          onClick: togglePasswordVisibility,\n          title: showPassword ? \"Hide Password\" : \"Show Password\",\n          children: showPassword ? /*#__PURE__*/_jsxDEV(AiOutlineEyeInvisible, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(AiOutlineEye, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 18\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAdminLoginToggle,\n        children: isAdminLogin ? \"Switch to User Login\" : \"Switch to Admin Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"iQmXG+isn7zsaPpGUsxzb07A6OI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","AiOutlineEye","AiOutlineEyeInvisible","jsxDEV","_jsxDEV","Login","setIsLoggedIn","_s","formData","setFormData","email","password","navigate","error","setError","showPassword","setShowPassword","isPasswordEmpty","setIsPasswordEmpty","isAdminLogin","setIsAdminLogin","isLoggedIn","localStorage","getItem","handleInputChange","e","target","name","value","handleLogin","preventDefault","loginEndpoint","redirectPath","response","fetch","method","headers","body","JSON","stringify","data","json","status","setItem","user","firstname","type","console","togglePasswordVisibility","handleAdminLoginToggle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","required","onClick","title","style","color","_c","$RefreshReg$"],"sources":["C:/Users/shank/OneDrive/Desktop/E-bookstore/frontend/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\nimport \"../../App.css\";\r\n\r\nconst Login = ({ setIsLoggedIn }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState(null);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isPasswordEmpty, setIsPasswordEmpty] = useState(true);\r\n  const [isAdminLogin, setIsAdminLogin] = useState(false); // State to track admin login mode\r\n\r\n  useEffect(() => {\r\n    const isLoggedIn = localStorage.getItem(\"isLoggedIn\");\r\n    if (isLoggedIn === \"true\") {\r\n      navigate(\"/\");\r\n    }\r\n  }, [navigate]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n    if (e.target.name === \"password\") {\r\n      setIsPasswordEmpty(e.target.value === \"\");\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let loginEndpoint = \"http://localhost:8000/users/login\"; // Endpoint for user login by default\r\n      let redirectPath = \"/\"; // Default redirect path\r\n\r\n      if (isAdminLogin) {\r\n        loginEndpoint = \"http://localhost:8000/admin/login\"; // Change endpoint for admin login if isAdminLogin is true\r\n        redirectPath = \"/dashboard\"; // Redirect admin to the dashboard\r\n      }\r\n\r\n      const response = await fetch(loginEndpoint, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.status === 200) {\r\n        localStorage.setItem(\"isLoggedIn\", \"true\");\r\n        localStorage.setItem(\"firstName\", data.user.firstname);\r\n        setIsLoggedIn(true);\r\n\r\n        // Redirect to the appropriate page based on the user's role\r\n        navigate(redirectPath);\r\n      } else {\r\n        setFormData({ email: \"\", password: \"\" });\r\n\r\n        // Handle login error messages\r\n        if (data && data.type === \"email\") {\r\n          setError(\"Email not found. Please check your email.\");\r\n        } else if (data && data.type === \"password\") {\r\n          setError(\"Incorrect password. Please try again.\");\r\n        } else {\r\n          setError(\"Invalid credentials. Please try again.\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setError(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleAdminLoginToggle = () => {\r\n    setIsAdminLogin(!isAdminLogin); // Toggle admin login mode\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1>{isAdminLogin ? \"Admin Login\" : \"User Login\"}</h1>\r\n      <form onSubmit={handleLogin}>\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        <br />\r\n        <br />\r\n\r\n        <label htmlFor=\"password\">Password:</label>\r\n        <div className=\"password-input\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleInputChange}\r\n            required\r\n            className=\"password-field\"\r\n          />\r\n          {!isPasswordEmpty && (\r\n            <span\r\n              className=\"toggle-password\"\r\n              onClick={togglePasswordVisibility}\r\n              title={showPassword ? \"Hide Password\" : \"Show Password\"}\r\n            >\r\n              {showPassword ? <AiOutlineEyeInvisible /> : <AiOutlineEye />}\r\n            </span>\r\n          )}\r\n        </div>\r\n        <br />\r\n        <br />\r\n        {error ? <p style={{ color: \"red\" }}>{error}</p> : null}\r\n        <input type=\"submit\" value=\"Login\" />\r\n        <button type=\"button\" onClick={handleAdminLoginToggle}>\r\n          {isAdminLogin ? \"Switch to User Login\" : \"Switch to Admin Login\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}