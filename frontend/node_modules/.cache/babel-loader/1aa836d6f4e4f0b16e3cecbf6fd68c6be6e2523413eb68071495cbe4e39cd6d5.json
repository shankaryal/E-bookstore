{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shank\\\\OneDrive\\\\Desktop\\\\E-bookstore\\\\frontend\\\\src\\\\components\\\\Book\\\\UpdateBook.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateBook = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [book, setBook] = useState({\n    name: \"\",\n    author: \"\",\n    genre: \"\",\n    description: \"\",\n    publisher: \"\",\n    price: 0,\n    image: null,\n    pdf: null\n  });\n  const [previousImage, setPreviousImage] = useState(\"\");\n  const [previousPdf, setPreviousPdf] = useState(\"\");\n  useEffect(() => {\n    async function fetchBook() {\n      try {\n        const response = await axios.get(`http://localhost:8000/books/${id}`);\n        const {\n          name,\n          author,\n          genre,\n          description,\n          publisher,\n          price,\n          image,\n          pdf\n        } = response.data;\n        setBook({\n          name,\n          author,\n          genre,\n          description,\n          publisher,\n          price,\n          image: null,\n          // Resetting the image temporarily to avoid displaying the previous image\n          pdf: null // Resetting the pdf temporarily to avoid displaying the previous pdf\n        });\n\n        // Fetch the image and PDF files asynchronously and set them after initial state update\n        const imageResponse = await axios.get(`http://localhost:8000/${image}`);\n        const pdfResponse = await axios.get(`http://localhost:8000/${pdf}`);\n        setBook(prevBook => ({\n          ...prevBook,\n          image: imageResponse.data,\n          // Set the image data fetched from the server\n          pdf: pdfResponse.data // Set the pdf data fetched from the server\n        }));\n      } catch (error) {\n        console.error(\"Error fetching book:\", error);\n      }\n    }\n    fetchBook();\n  }, [id]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"image\" || name === \"pdf\") {\n      setBook(prevBook => ({\n        ...prevBook,\n        [name]: e.target.files[0] || null // Update file value directly or set to null if no file selected\n      }));\n    } else {\n      setBook(prevBook => ({\n        ...prevBook,\n        [name]: value\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"name\", book.name);\n    formData.append(\"author\", book.author);\n    formData.append(\"genre\", book.genre);\n    formData.append(\"description\", book.description);\n    formData.append(\"publisher\", book.publisher);\n    formData.append(\"price\", book.price);\n    formData.append(\"image\", book.image || previousImage || \"\"); // Use previousImage if no new image selected\n    formData.append(\"pdf\", book.pdf || previousPdf || \"\"); // Use previousPdf if no new pdf selected\n\n    try {\n      const response = await axios.put(`http://localhost:8000/books/${id}`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(\"Book updated:\", response.data);\n      navigate(\"/\"); // Redirect to the home page after updating the book\n    } catch (error) {\n      console.error(\"Error updating book:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      onSubmit: handleSubmit,\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: book.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), \"Author:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"author\",\n        value: book.author,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), \"Genre:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"genre\",\n        value: book.genre,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), \"Publisher:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"publisher\",\n        value: book.publisher,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), \"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        rows: \"4\",\n        value: book.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), \"Price:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"price\",\n        value: book.price,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), \"Image:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        accept: \"image/*\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), \"PDF:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"pdf\",\n        accept: \".pdf\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateBook, \"eZ6yPNI+60qayaSIDpMsJ7NTks0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateBook;\nexport default UpdateBook;\nvar _c;\n$RefreshReg$(_c, \"UpdateBook\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsxDEV","_jsxDEV","UpdateBook","_s","id","navigate","book","setBook","name","author","genre","description","publisher","price","image","pdf","previousImage","setPreviousImage","previousPdf","setPreviousPdf","fetchBook","response","get","data","imageResponse","pdfResponse","prevBook","error","console","handleChange","e","value","target","files","handleSubmit","preventDefault","formData","FormData","append","put","headers","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexDirection","onSubmit","type","onChange","rows","accept","_c","$RefreshReg$"],"sources":["C:/Users/shank/OneDrive/Desktop/E-bookstore/frontend/src/components/Book/UpdateBook.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst UpdateBook = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [book, setBook] = useState({\r\n    name: \"\",\r\n    author: \"\",\r\n    genre: \"\",\r\n    description: \"\",\r\n    publisher: \"\",\r\n    price: 0,\r\n    image: null,\r\n    pdf: null,\r\n  });\r\n\r\n  const [previousImage, setPreviousImage] = useState(\"\");\r\n  const [previousPdf, setPreviousPdf] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchBook() {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8000/books/${id}`);\r\n        const {\r\n          name,\r\n          author,\r\n          genre,\r\n          description,\r\n          publisher,\r\n          price,\r\n          image,\r\n          pdf,\r\n        } = response.data;\r\n\r\n        setBook({\r\n          name,\r\n          author,\r\n          genre,\r\n          description,\r\n          publisher,\r\n          price,\r\n          image: null, // Resetting the image temporarily to avoid displaying the previous image\r\n          pdf: null, // Resetting the pdf temporarily to avoid displaying the previous pdf\r\n        });\r\n\r\n        // Fetch the image and PDF files asynchronously and set them after initial state update\r\n        const imageResponse = await axios.get(`http://localhost:8000/${image}`);\r\n        const pdfResponse = await axios.get(`http://localhost:8000/${pdf}`);\r\n\r\n        setBook((prevBook) => ({\r\n          ...prevBook,\r\n          image: imageResponse.data, // Set the image data fetched from the server\r\n          pdf: pdfResponse.data, // Set the pdf data fetched from the server\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching book:\", error);\r\n      }\r\n    }\r\n    fetchBook();\r\n  }, [id]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"image\" || name === \"pdf\") {\r\n      setBook((prevBook) => ({\r\n        ...prevBook,\r\n        [name]: e.target.files[0] || null, // Update file value directly or set to null if no file selected\r\n      }));\r\n    } else {\r\n      setBook((prevBook) => ({\r\n        ...prevBook,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"name\", book.name);\r\n    formData.append(\"author\", book.author);\r\n    formData.append(\"genre\", book.genre);\r\n    formData.append(\"description\", book.description);\r\n    formData.append(\"publisher\", book.publisher);\r\n    formData.append(\"price\", book.price);\r\n    formData.append(\"image\", book.image || previousImage || \"\"); // Use previousImage if no new image selected\r\n    formData.append(\"pdf\", book.pdf || previousPdf || \"\"); // Use previousPdf if no new pdf selected\r\n\r\n    try {\r\n      const response = await axios.put(\r\n        `http://localhost:8000/books/${id}`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n      console.log(\"Book updated:\", response.data);\r\n      navigate(\"/\"); // Redirect to the home page after updating the book\r\n    } catch (error) {\r\n      console.error(\"Error updating book:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-container\">\r\n      <h2>Update Book</h2>\r\n      <form\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        Name:\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={book.name}\r\n          onChange={handleChange}\r\n        />\r\n        Author:\r\n        <input\r\n          type=\"text\"\r\n          name=\"author\"\r\n          value={book.author}\r\n          onChange={handleChange}\r\n        />\r\n        Genre:\r\n        <input\r\n          type=\"text\"\r\n          name=\"genre\"\r\n          value={book.genre}\r\n          onChange={handleChange}\r\n        />\r\n        Publisher:\r\n        <input\r\n          type=\"text\"\r\n          name=\"publisher\"\r\n          value={book.publisher}\r\n          onChange={handleChange}\r\n        />\r\n        Description:\r\n        <textarea\r\n          name=\"description\"\r\n          rows=\"4\"\r\n          value={book.description}\r\n          onChange={handleChange}\r\n        ></textarea>\r\n        Price:\r\n        <input\r\n          type=\"number\"\r\n          name=\"price\"\r\n          value={book.price}\r\n          onChange={handleChange}\r\n        />\r\n        Image:\r\n        <input\r\n          type=\"file\"\r\n          name=\"image\"\r\n          accept=\"image/*\"\r\n          onChange={handleChange}\r\n        />\r\n        PDF:\r\n        <input type=\"file\" name=\"pdf\" accept=\".pdf\" onChange={handleChange} />\r\n        <button type=\"submit\">Update Book</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateBook;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}